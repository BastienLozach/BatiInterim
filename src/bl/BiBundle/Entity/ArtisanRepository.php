<?php

namespace bl\BiBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArtisanRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArtisanRepository extends EntityRepository
{
    public function disponiblesParDateEtCorps(\DateTime $date, \bl\BiBundle\Entity\CorpsMetier $corpsMetier)
    {
        $listeProvisoire = $this->findByCorpsMetier($corpsMetier) ;
        
        $listeFinale = array() ;
        foreach($listeProvisoire as $artisan){
            $disponible = true ;
            foreach($artisan->getConges() as $conge){
                if ($conge->getDateConge() == $date){
                    $disponible = false ;
                    break ;
                }
            }
            foreach($artisan->getAffectations() as $affectation){
                if ($affectation->getMission()->getDateDebut() <= $date && $affectation->getMission()->getDateFin() >= $date){
                    $disponible = false ;
                    break ;
                }
            }
            if ($disponible) {
                array_push($listeFinale, $artisan) ;
            }
            
            
        }
        
        return $listeFinale ;

    }
    
    public function disponiblesPourMission(\bl\BiBundle\Entity\Mission $mission)
    {
        $listeProvisoire = $this->findByCorpsMetier($mission->getCorpsMetier()) ;
        
        $listeFinale = array() ;
        foreach($listeProvisoire as $artisan){
            $disponible = true ;
            foreach($artisan->getConges() as $conge){
                if ($mission->getDateDebut() <= $conge->getDateConge() && $mission->getDateFin() >= $conge->getDateConge()){
                    $disponible = false ;
                    break ;
                }
            }
            foreach($artisan->getAffectations() as $affectation){
                //if ($affectation->getMission()->getDateDebut() <= $mission->getDateFin() && $affectation->getMission()->getDateFin() >= $mission->getDateDebut()){
                if(!($mission->getDateFin() <= $affectation->getMission()->getDateDebut() && $mission->getDateDebut() >= $affectation->getMission()->getDateFin())){
                    $disponible = false ;
                    break ;
                }
            }
            if ($disponible) {
                array_push($listeFinale, $artisan) ;
            }
            
            
        }
        
        return $listeFinale ;

    }
    
    
    public function disponibleParDateEtArtisan(\DateTime $date, \bl\BiBundle\Entity\Artisan $artisan)
    {

        foreach($artisan->getConges() as $conge){
            if ($conge->getDateConge() == $date){
                return  false ;
                break ;
            }
        }
        foreach($artisan->getAffectations() as $affectation){
            if ($affectation->getMission()->getDateDebut() <= $date && $affectation->getMission()->getDateFin() >= $date){
                return false ;
                break ;
            }
        }
        return true ;

    }
    
}
